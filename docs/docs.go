// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/comments": {
            "get": {
                "description": "get all comments",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "List comments",
                "operationId": "getAllComments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Comment"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            },
            "post": {
                "description": "create comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Add a comment",
                "operationId": "createComment",
                "parameters": [
                    {
                        "description": "info for comment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/api/v1/comments/{id}": {
            "get": {
                "description": "show comment for input id",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Show a comment",
                "operationId": "getOneComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id for comment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            },
            "put": {
                "description": "update comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update a comment",
                "operationId": "updateComment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id for comment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "info for comment",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Comment"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete comment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment",
                "operationId": "deletecomment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id for comment",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/api/v1/posts": {
            "get": {
                "description": "get all posts",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "List posts",
                "operationId": "getAllPosts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Post"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            },
            "post": {
                "description": "create post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Add a post",
                "operationId": "createPost",
                "parameters": [
                    {
                        "description": "info for post",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/api/v1/posts/{id}": {
            "get": {
                "description": "show post for input id",
                "consumes": [
                    "application/json",
                    "text/xml"
                ],
                "produces": [
                    "application/json",
                    "text/xml"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Show a post",
                "operationId": "getOnePost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id for post",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            },
            "put": {
                "description": "update post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Update a post",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id for post",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "info for post",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Post"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete post",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "posts"
                ],
                "summary": "Delete a post",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id for post",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/auth": {
            "get": {
                "description": "auth user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "auth user",
                "operationId": "auth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/auth/callback": {
            "get": {
                "description": "auth and create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "auth callback user",
                "operationId": "authCallback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        },
        "/logout": {
            "get": {
                "description": "logout and delete user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "logout user",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "int"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "int"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Comment": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "postId": {
                    "type": "integer"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "models.Post": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "localhost:8080",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "Task NIX",
	Description: "This is REST API with echo framework.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
